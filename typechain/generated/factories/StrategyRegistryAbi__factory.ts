/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  StrategyRegistryAbi,
  StrategyRegistryAbiInterface,
} from "../StrategyRegistryAbi";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMasterWallet",
        name: "masterWallet_",
        type: "address",
      },
      {
        internalType: "contract ISpoolAccessControl",
        name: "accessControl_",
        type: "address",
      },
      {
        internalType: "contract IUsdPriceFeedManager",
        name: "priceFeedManager_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghostStrategy_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "BadStrategyApy",
    type: "error",
  },
  {
    inputs: [],
    name: "ConfigurationAddressZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyIndex",
        type: "uint256",
      },
    ],
    name: "DhwNotRunYetForIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "DoHardWorkParametersExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ecosystemFeePct",
        type: "uint256",
      },
    ],
    name: "EcosystemFeeTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "ExchangeRateOutOfSlippages",
    type: "error",
  },
  {
    inputs: [],
    name: "GhostStrategyUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "InvalidStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenList",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MissingRole",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSameAssetGroup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "OnlyViewExecution",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "StrategyAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "StrategyPreviouslyRemoved",
    type: "error",
  },
  {
    inputs: [],
    name: "SystemPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasuryFeePct",
        type: "uint256",
      },
    ],
    name: "TreasuryFeeTooLarge",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "ecosystemFeeReceiver",
        type: "address",
      },
    ],
    name: "EcosystemFeeReceiverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
    ],
    name: "EcosystemFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "EmergencyWithdrawalWalletSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "apy",
        type: "int256",
      },
    ],
    name: "StrategyApyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dhwIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "sharesMinted",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "assetsWithdrawn",
            type: "uint256[]",
          },
          {
            internalType: "int256",
            name: "yieldPercentage",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "valueAtDhw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSstsAtDhw",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DhwInfo",
        name: "dhwInfo",
        type: "tuple",
      },
    ],
    name: "StrategyDhw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "StrategyEmergencyWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "StrategyRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "StrategyRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "assetsWithdrawn",
        type: "uint256[]",
      },
    ],
    name: "StrategySharesFastRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "assetsWithdrawn",
        type: "uint256[]",
      },
    ],
    name: "StrategySharesRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasuryFeeReceiver",
        type: "address",
      },
    ],
    name: "TreasuryFeeReceiverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePct",
        type: "uint256",
      },
    ],
    name: "TreasuryFeeSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies_",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "amounts",
        type: "uint256[][]",
      },
    ],
    name: "addDeposits",
    outputs: [
      {
        internalType: "uint16a16",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyShares",
        type: "uint256[]",
      },
    ],
    name: "addWithdrawals",
    outputs: [
      {
        internalType: "uint16a16",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "assetRatioAtLastDhw",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies_",
        type: "address[]",
      },
      {
        internalType: "uint16a16",
        name: "dhwIndexes",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "strategyShares",
        type: "uint256[]",
      },
    ],
    name: "claimWithdrawals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
    ],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "depositedAssets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
      {
        internalType: "uint16a16",
        name: "dhwIndexes",
        type: "uint256",
      },
    ],
    name: "dhwTimestamps",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[][]",
            name: "strategies",
            type: "address[][]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "swapTarget",
                type: "address",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapCallData",
                type: "bytes",
              },
            ],
            internalType: "struct SwapInfo[][][]",
            name: "swapInfo",
            type: "tuple[][][]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "swapTarget",
                type: "address",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapCallData",
                type: "bytes",
              },
            ],
            internalType: "struct SwapInfo[][][]",
            name: "compoundSwapInfo",
            type: "tuple[][][]",
          },
          {
            internalType: "uint256[][][]",
            name: "strategySlippages",
            type: "uint256[][][]",
          },
          {
            internalType: "int256[][]",
            name: "baseYields",
            type: "int256[][]",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[2][]",
            name: "exchangeRateSlippages",
            type: "uint256[2][]",
          },
          {
            internalType: "uint256",
            name: "validUntil",
            type: "uint256",
          },
        ],
        internalType: "struct DoHardWorkParameterBag",
        name: "dhwParams",
        type: "tuple",
      },
    ],
    name: "doHardWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "withdrawalSlippages",
        type: "uint256[][]",
      },
      {
        internalType: "bool",
        name: "removeStrategies",
        type: "bool",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdrawalWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
      {
        internalType: "uint16a16",
        name: "dhwIndexes",
        type: "uint256",
      },
    ],
    name: "getDhwYield",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "ecosystemFeePct_",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "treasuryFeePct_",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "ecosystemFeeReceiver_",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasuryFeeReceiver_",
        type: "address",
      },
      {
        internalType: "address",
        name: "emergencyWithdrawalWallet_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFees",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ecosystemFeeReceiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "ecosystemFeePct",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "treasuryFeeReceiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "treasuryFeePct",
            type: "uint96",
          },
        ],
        internalType: "struct PlatformFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "strategies",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "strategyShares",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "assetGroup",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "withdrawalSlippages",
            type: "uint256[][]",
          },
        ],
        internalType: "struct RedeemFastParameterBag",
        name: "redeemFastParams",
        type: "tuple",
      },
    ],
    name: "redeemFast",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        internalType: "uint256[][]",
        name: "withdrawalSlippages",
        type: "uint256[][]",
      },
    ],
    name: "redeemStrategyShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        internalType: "uint256[][]",
        name: "withdrawalSlippages",
        type: "uint256[][]",
      },
      {
        internalType: "address",
        name: "redeemer",
        type: "address",
      },
    ],
    name: "redeemStrategySharesView",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "int256",
        name: "apy",
        type: "int256",
      },
    ],
    name: "registerStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "removeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "ecosystemFeePct_",
        type: "uint96",
      },
    ],
    name: "setEcosystemFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ecosystemFeePct_",
        type: "address",
      },
    ],
    name: "setEcosystemFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "emergencyWithdrawalWallet_",
        type: "address",
      },
    ],
    name: "setEmergencyWithdrawalWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "int256",
        name: "apy",
        type: "int256",
      },
    ],
    name: "setStrategyApy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "treasuryFeePct_",
        type: "uint96",
      },
    ],
    name: "setTreasuryFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "treasuryFeeReceiver_",
        type: "address",
      },
    ],
    name: "setTreasuryFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "sharesRedeemed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
    ],
    name: "strategyAPYs",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
      {
        internalType: "uint16a16",
        name: "dhwIndexes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetGroupLength",
        type: "uint256",
      },
    ],
    name: "strategyAtIndexBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "exchangeRates",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "assetsDeposited",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "sharesMinted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSSTs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStrategyValue",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "dhwYields",
            type: "int256",
          },
        ],
        internalType: "struct StrategyAtIndex[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class StrategyRegistryAbi__factory {
  static readonly abi = _abi;
  static createInterface(): StrategyRegistryAbiInterface {
    return new Interface(_abi) as StrategyRegistryAbiInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyRegistryAbi {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyRegistryAbi;
  }
}
